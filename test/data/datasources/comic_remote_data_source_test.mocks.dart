// Mocks generated by Mockito 5.0.16 from annotations
// in marvel_app/test/data/datasources/comic_remote_data_source_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:crypto/crypto.dart' as _i3;
import 'package:http/http.dart' as _i2;
import 'package:marvel_app/core/clients/marvel_api_client.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeClient_0 extends _i1.Fake implements _i2.Client {}

class _FakeDigest_1 extends _i1.Fake implements _i3.Digest {}

class _FakeUri_2 extends _i1.Fake implements Uri {}

/// A class which mocks [MarvelApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockMarvelApiClient extends _i1.Mock implements _i4.MarvelApiClient {
  MockMarvelApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseurl =>
      (super.noSuchMethod(Invocation.getter(#baseurl), returnValue: '')
          as String);
  @override
  set baseurl(String? _baseurl) =>
      super.noSuchMethod(Invocation.setter(#baseurl, _baseurl),
          returnValueForMissingStub: null);
  @override
  _i2.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient_0()) as _i2.Client);
  @override
  set client(_i2.Client? _client) =>
      super.noSuchMethod(Invocation.setter(#client, _client),
          returnValueForMissingStub: null);
  @override
  int generateTimestamp() =>
      (super.noSuchMethod(Invocation.method(#generateTimestamp, []),
          returnValue: 0) as int);
  @override
  _i3.Digest generateHash(int? timestamp) =>
      (super.noSuchMethod(Invocation.method(#generateHash, [timestamp]),
          returnValue: _FakeDigest_1()) as _i3.Digest);
  @override
  Uri generateUrl(String? path) =>
      (super.noSuchMethod(Invocation.method(#generateUrl, [path]),
          returnValue: _FakeUri_2()) as Uri);
  @override
  _i5.Future<Map<String, dynamic>> get(String? path) => (super.noSuchMethod(
          Invocation.method(#get, [path]),
          returnValue: Future<Map<String, dynamic>>.value(<String, dynamic>{}))
      as _i5.Future<Map<String, dynamic>>);
  @override
  String toString() => super.toString();
}
