// Mocks generated by Mockito 5.0.16 from annotations
// in marvel_app/test/data/repositories/comic_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:marvel_app/core/clients/marvel_api_client.dart' as _i2;
import 'package:marvel_app/data/datasources/comic_remote_data_source.dart'
    as _i3;
import 'package:marvel_app/data/models/comic_model.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeMarvelApiClient_0 extends _i1.Fake implements _i2.MarvelApiClient {}

/// A class which mocks [ComicRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockComicRemoteDataSource extends _i1.Mock
    implements _i3.ComicRemoteDataSource {
  MockComicRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MarvelApiClient get apiClient =>
      (super.noSuchMethod(Invocation.getter(#apiClient),
          returnValue: _FakeMarvelApiClient_0()) as _i2.MarvelApiClient);
  @override
  _i4.Future<List<_i5.ComicModel>> getByCharacter(int? characterId) =>
      (super.noSuchMethod(Invocation.method(#getByCharacter, [characterId]),
              returnValue:
                  Future<List<_i5.ComicModel>>.value(<_i5.ComicModel>[]))
          as _i4.Future<List<_i5.ComicModel>>);
  @override
  String toString() => super.toString();
}
